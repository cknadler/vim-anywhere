#!/bin/bash
#
# vim-anywhere - use Vim whenever, wherever
# Author: Chris Knadler
# Homepage: https://www.github.com/cknadler/vim-anywhere
#
# Installs vim-anywhere. Intended for use via curl:
#
#   $ curl -fsSL https://raw.github.com/cknadler/vim-anywhere/master/install | bash

err() { echo "$@" 1>&2; }

check_bin() {
  which $1 &>/dev/null
  return $?
}

check_install() {
  check_bin $1
  if [ $? -ne 0 ]; then
    err "vim-anywhere requires $1 to function"
    if [[ "$2" != "" ]]; then echo $2; fi
    exit 1
  fi
}

check_install_among() {
  found=0
  for bin in $*; do
    check_bin $bin
    if [ $? -eq 0 ]; then
      found=1
      break
    fi
  done
  if [ "$found" -eq 0 ]; then
    err "vim-anywhere requires one of those binaries: $*"
    exit 1
  fi
}

aw_path=$HOME/.vim-anywhere
aw_url='https://github.com/cknadler/vim-anywhere'

###
# pre-installation checks
###

# Check if vim-anywhere is already installed. If so, remove the previous
# installation.
if [ -a $aw_path ]; then
  echo 'Cleaning up previous installation...'
  rm -rf $aw_path
  # TODO: It would be nice to have an option for user input here
  # Reinstall vim-anywhere (y/n)? ... or something like that
fi

check_install git

# If we are on Linux
if [[ "$OSTYPE" == "linux-gnu" ]]; then
  check_install_among gconftool gsettings
  check_install gvim
  check_install xclip

# If we are on OSX
elif [[ "$OSTYPE" == "darwin"* ]]; then
  check_install brew 'Visit http://brew.sh for details.'
  check_install mvim 'Run `brew install macvim`.'

fi

###
# installation
###

echo "Installing vim-anywhere..."

# unset any local git env variables
unset $(git rev-parse --local-env-vars) &>/dev/null

# clone the repo into the current user's home folder
git clone $aw_url $aw_path
# if the git clone fails (usually due to auth) bail
[ $? -ne 0 ] && exit 1

# If we are on Linux
if [[ "$OSTYPE" == "linux-gnu" ]]; then
  name="vim-anywhere"
  binding="<CTRL><ALT>v"
  action="$aw_path/bin/run"
  check_bin gconftool
  if [ $? -eq 0 ]; then
    kbd=/desktop/gnome/keybindings/vim-anywhere
    gconftool -t str --set $kbd/name $name
    gconftool -t str --set $kbd/binding $binding
    gconftool -t str --set $kbd/action $action
  else
    mky=org.gnome.settings-daemon.plugins.media-keys
    ckb=org.gnome.settings-daemon.plugins.media-keys.custom-keybinding
    kbd=/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/vim-anywhere/
    gsettings set $mky custom-keybindings "['others', '$kbd']"
    gsettings set $ckb:$kbd binding $binding
    gsettings set $ckb:$kbd command $action
    gsettings set $ckb:$kbd name $name
  fi
# If we are on OSX
elif [[ "$OSTYPE" == "darwin"* ]]; then
  # install the workflow as a service
  cp -R $aw_path/VimAnywhere.workflow $HOME/Library/Services

  # TODO: add shortcut
  # It would be great if there was a way to set the keyboard shortcut for
  # vim-anywhere programatically (without GUI scripting). If there ends up being a
  # way to do this, it would go here.

  # As a partial workaround, run a script that opens the shortcut options
  echo "Opening System Preferences..."
  osascript $aw_path/script/open_shortcuts.scpt &>/dev/null
fi

echo "vim-anywhere has been successfully installed!"
